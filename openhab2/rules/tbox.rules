rule "Convert Climate"
   when
      Item Climate changed
   then
      var climate_str = Climate.state.toString
      val values = climate_str.split(',')

      Temperature.postUpdate(values.get(0))
      Humidity.postUpdate(values.get(1))
      Pressure.postUpdate(values.get(2))
end


rule "Set Servo X"
   when
      Item ServoX changed
   then
      servoPulse.sendCommand("0 " + ServoX.state.toString)
      servoRun.sendCommand(ON)
      logInfo("servo-x", servoOut.state.toString)
end


rule "Set Servo Y"
   when
      Item ServoY changed
   then
      servoPulse.sendCommand("1 " + ServoY.state.toString)
      servoRun.sendCommand(ON)
      logInfo("servo-y", servoOut.state.toString)
end


rule "UV-Ligth ON"
    when
        Time cron "0 0 6 1/1 * ? *"
    then
        Releay_2.sendCommand(ON)
        logInfo("relay-2", "UV-Light is ON")
end


rule "UV-Ligth OFF"
    when
        Time cron "0 0 18 1/1 * ? *"
    then
        Releay_2.sendCommand(OFF)
        logInfo("relay-2", "UV-Light is OFF")
end

rule "Heater OFF"
    when
        Temperature.state >= 30
    then
        Releay_3.sendCommand(OFF)
        Releay_4.sendCommand(OFF)
        logInfo("relay-3, relay-4", "Heater OFF")
        sendBroadcastNotification("Heater OFF", "heating", "WARN")
end
